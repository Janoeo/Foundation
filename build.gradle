buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7.32'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

if (project.findProperty('ci_build').toBoolean()) {
    version = "ci.${project.findProperty('ci_build_number')}"
} else {
    version =  "${project.findProperty('projectVersion')}"
    version +=".${project.findProperty('majorVersion')}"
    version +=".${project.findProperty('minorVersion')}"
    version +=".${project.findProperty('buildVersion')}"
    if (project.findProperty('isExperimental').toBoolean()) {
        version += '-experimental'
    }
}

group = 'fr.alasdiablo.janoeo.foundation'
archivesBaseName = 'Janoeo Foundation'

def manifestAttributes = [
        "Specification-Title"     : project.name,
        "Specification-Vendor"    : "AlasDiablo, Safyrus, SmartzyYY",
        "Specification-Version"   : project.findProperty('majorVersion').toString(),
        "Implementation-Title"    : project.name,
        "Implementation-Version"  : project.jar.archiveVersion,
        "Implementation-Vendor"   : "AlasDiablo",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]

def outputFolder = file(rootProject.getRootDir().getPath() + '/output')

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

def deobfSourceClassifier

minecraft {
    // mappings channel: 'parchment', version: '2022.06.05-1.18.2'
    mappings channel: 'official', version: '1.19'
    deobfSourceClassifier = getMappings().get()
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'janoeo_foundation'
            mods {
                janoeo_foundation {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'janoeo_foundation'
            mods {
                janoeo_foundation {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'janoeo_foundation'

            mods {
                janoeo_foundation {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'janoeo_foundation', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                janoeo_foundation {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19-41.1.0'
    implementation fileTree(dir:'lib', include:'*.jar')
    // implementation fg.deobf('curse.maven:catalogue-459701:3822882') // Catalogue (1.6.1)
    // implementation fg.deobf('curse.maven:jei-238222:3835406')       // JEI (9.7.0.195)
    // implementation fg.deobf('curse.maven:jer-240630:3760449')       // JER (0.14.1.167)
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest.attributes(manifestAttributes)
    destinationDirectory.set(file(rootProject.getRootDir().getPath() + '/output'))
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    def archiveName = 'sources-' + deobfSourceClassifier
    archiveClassifier.set(archiveName)
    destinationDirectory.set(outputFolder)
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    def archiveName = 'deobf-' + deobfSourceClassifier
    archiveClassifier.set(archiveName)
    manifest.attributes(manifestAttributes)
    destinationDirectory.set(outputFolder)
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
